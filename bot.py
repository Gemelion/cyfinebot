
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode  # Corrected import for ParseMode
import logging
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.utils import executor
import os

API_TOKEN = os.getenv("API_TOKEN")  # Make sure your API token is set in the environment variables

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

logging.basicConfig(level=logging.INFO)

# Command handler for /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CyFineBot ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤ —Å –∫–∞–º–µ—Ä –Ω–∞ –ö–∏–ø—Ä–µ.")

# Command handler for /help
@dp.message_handler(commands=['help'])
async def help(message: types.Message):
    await message.reply("–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —à—Ç—Ä–∞—Ñ—ã –ø–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è.")

# Main entry point
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
