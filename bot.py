
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ParseMode
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.utils import executor
import os
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv('TELEGRAM_API_TOKEN')

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.reply("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CyFineBot ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤ —Å –∫–∞–º–µ—Ä –Ω–∞ –ö–∏–ø—Ä–µ.

–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –≤ –º–µ–Ω—é.")

@dp.message_handler(commands=['help'])
async def send_help(message: types.Message):
    await message.reply("–ü–æ–º–æ—â—å: –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã –ø–æ –Ω–æ–º–µ—Ä—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç—É.
–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è.")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
